§ 1 как должна быть реализована аутентификация и авторизация на сайте
1.1 при авторизации через фейсбук (плагин реакта дергает oauth и получает токен) в бекенд отправляеться facebook_access_token по которому
определяеться есть ли этот пользователь у нас в базе. если нет - добавляеться. back дергает соц сеть по апи и получает все данные (имя, имейл и тд.)
если уже есть пользователь с данным имейлом, то ему предлагаеться залогиниться через вебформу с вводом пары имейл/пароль

1.2 так же будет работать авторизация и аутентификация через линкедин.

1.3 проверка авторизированный ли пользователь, проводиться по куки, а именно при помощи "accessToken".
 если пользователь авторизированный, данный куки есть и проверяеться на сервере, там он хранится в бд.
 если accessToken не совпадает или отсутствует сервер возвращает 404 страницу, при заходе на страницы которые разрешены только зарегестрированым пользователям

1.4 при регистрации пользователя/компании отправляеться json на сервер адресс "/api/registration"
	1.4.1 для пользователя:
		{
			"type": "user",
			"first_name": "Bogdan",
			"second_name": "Korzun",
			"email": "bodasia@gmail.com",
			"password": "MD5"
		}
		
		если регестрация прошла успешно
			возвращаеться ответ
			{
				"signup": "true",
				"accessToken": "asdjkh234hlkj234kjhlkj23h4",
				"message": "",
			}
			если нет (такой пользователь уже есть и тд.)
			возвращаеться ответ
			{
				"signup": "false",
				"message": "this user is already signed up, please log in",
			}
		или другое сообщение, об ошибке. по умолчанию, "неизвестная ошибка", ошибки уточним в дальнейшем.		

		в случае успешной регистрации показываеться форма выбора категорий в куки записываеться accessToken и отображаеться форма выбора категорий
		после выбора категорий отправляеться json на адрес "/api/user"
			{
				"accessToken": "asdjkh234hlkj234kjhlkj23h4",
				"category": [
					{
						"id": "1"
					},
					{
						"id": "2"
					}					
				]
			}                             
		
		
		1.4.1.1 через социалку "/api/registration"
			{
				"type": "user",
				"social": "facebook", (или "linkedin",)
				"accessToken": "asdjkh234hlkj234kjhlkj23h4fwqe2r2tfdw",
			}
			
			если регестрация прошла успешно
				возвращаеться ответ
				{
					"signup": "true",
					"accessToken": "asdjkh234hlkj234kjhlkj23h4",
					"message": "",
				}
				если нет (такой пользователь уже есть итд. смотреть п 1.1)
				возвращаеться ответ
				{
					"signup": "false",
					"message": "this user is already signed up, please log in",
				}
				
				в случае успешной регистрации показываеться форма выбора категорий в куки записываеться accessToken и отображаеться форма выбора категорий
				после выбора категорий отправляеться json на адрес "/api/user"
					{
						"accessToken": "asdjkh234hlkj234kjhlkj23h4",
						"category": [
							{
								"id": "1"
							},
							{
								"id": "2"
							}					
						]
					}
			
	1.4.2 для компании:
		{
			"type": "company",
			"company_name": "KBIM"
			"first_name": "Bogdan",
			"second_name": "Korzun",
			"email": "bodasia@gmail.com",
			"password": "MD5"
		}
		
		если регестрация прошла успешно
			возвращаеться ответ
			{
				"signup": "true",
				"message": "",
			}
			если нет (такой пользователь уже есть итд)
			возвращаеться ответ
			{
				"signup": "false",
				"message": "this company is already signed up, please log in",
			}
			
			в случае успешной регистрации показываеться форма выбора категорий в куки записываеться accessToken и отображаеться форма выбора категорий
			после выбора категорий отправляеться json на адрес "/api/user"
			{
				"accessToken": "asdjkh234hlkj234kjhlkj23h4",
				"category": [
					{
						"id": "1"
					},
					{
						"id": "2"
					}					
				]
			}

		1.4.2.1 через социалку
			{
				"type": "user",
				"social": "facebook", (или "linkedin",)
				"accessToken": "asdjkh234hlkj234kjhlkj23h4fwqe2r2tfdw",
			}
			
			если регестрация прошла успешно
				возвращаеться ответ
				{
					"signup": "true",
					"accessToken": "asdjkh234hlkj234kjhlkj23h4",
					"message": "",
				}
				если нет (такой пользователь уже есть итд. смотреть п 1.1)
				возвращаеться ответ
				{
					"signup": "false",
					"message": "this user is already signed up, please log in",
				}
				
				в случае успешной регистрации показываеться форма выбора категорий в куки записываеться accessToken и отображаеться форма выбора категорий
				после выбора категорий отправляеться json на адресс "/api/user"
					{
						"accessToken": "asdjkh234hlkj234kjhlkj23h4",
						"company_name": "KBIM",
						"category": [
							{
								"id": "1"
							},
							{
								"id": "2"
							}					
						]
					}
					
1.5 при аутентифика́ция  пользователя/компании отправляеться json на сервер адресс "/api/auth" с полями 
	при аутентифика́ция через email password
		{
			"email": "bodasia@gmail.com",
			"password": "MD5"
		}
		
		в ответ приходит json в случае успешной авторизации
		{
			"signin": "true",
			"accessToken": "asdjkh234hlkj234kjhlkj23h4",
			"message": "",
		}
		не успешной
		{
			"signin": "false",
			"accessToken": "",
			"message": "incorect login or password",
		}
		по результатам accessToken прописываеться в куки
		
1.6 авторизации пользователя
	авторизации пользователя проводиться на стороне сервера проверкой наличия accessToken в базе


					
2 как должен быть построен роутинг на сайте
роутинг на сайте строиться ларавелом
по факту отдаються страницы с соответствующем урлом, и блоком <div id='app'> 